{"ast":null,"code":"import _objectSpread from \"/Users/michal/Downloads/Unknown-2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/michal/Downloads/Unknown-2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Player from \"./components/Player\";\nimport GameBoard from \"./components/GameBoard\";\nimport Log from \"./components/Log\";\nimport GameOver from \"./components/GameOver\";\nimport { WINNING_COMBINATIONS } from \"./winning-combination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYER = {\n  X: \"Player1\",\n  O: \"Plyaer2\"\n};\nconst initialGameBoard = [[null, null, null], [null, null, null], [null, null, null]];\nfunction deriveActivePlayer(gameTurns) {\n  let currentPlayer = \"X\";\n  if (gameTurns.length > 0 && gameTurns[0].player === \"X\") {\n    currentPlayer = \"O\";\n  }\n  return currentPlayer;\n}\nfunction App() {\n  _s();\n  const [player, setPlayer] = useState(PLAYER);\n  const [symbolPlayer, setSymbolPlayer] = useState(\"X\");\n  const [gameTurns, setGameTurns] = useState([]);\n  const activePlayer = deriveActivePlayer(gameTurns);\n  let boardGame = [...initialGameBoard.map(el => [...el])];\n  for (const turn of gameTurns) {\n    const {\n      square,\n      player\n    } = turn;\n    const {\n      row,\n      col\n    } = square;\n    boardGame[row][col] = player;\n  }\n  console.log(boardGame);\n  let winner;\n  for (const combination of WINNING_COMBINATIONS) {\n    const firstSquareSymbol = boardGame[combination[0].row][combination[0].column];\n    const secondSquareSymbol = boardGame[combination[1].row][combination[1].column];\n    const thirdSquareSymbol = boardGame[combination[2].row][combination[2].column];\n    if (firstSquareSymbol && firstSquareSymbol === secondSquareSymbol && firstSquareSymbol === thirdSquareSymbol) {\n      winner = player[firstSquareSymbol];\n    }\n  }\n  let hasDraw = gameTurns.length === 9 && !winner;\n  function handleSelctedSquare(indexRow, indexCol) {\n    //setSymbolPlayer((symbol) => (symbol === \"X\" ? \"O\" : \"X\"));\n    setGameTurns(prevTurns => {\n      const currentPlayer = deriveActivePlayer(prevTurns);\n      //if(prevTurns.find(el=> el.square.row==indexRow))\n      const updatedPrevTurns = [{\n        square: {\n          row: indexRow,\n          col: indexCol\n        },\n        player: currentPlayer\n      }, ...prevTurns];\n      return updatedPrevTurns;\n    });\n  }\n  function startOver() {\n    setGameTurns([]);\n  }\n  function handlePlayerNewName(symbol, newName) {\n    setPlayer(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [symbol]: newName\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"menu\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        id: \"players\",\n        className: \"highlight-player\",\n        children: [/*#__PURE__*/_jsxDEV(Player, {\n          name: PLAYER.X,\n          symbol: \"X\",\n          isActive: activePlayer === \"X\",\n          newWinnerName: handlePlayerNewName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Player, {\n          name: PLAYER.O,\n          symbol: \"O\",\n          isActive: activePlayer === \"O\",\n          newWinnerName: handlePlayerNewName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), (winner || hasDraw) && /*#__PURE__*/_jsxDEV(GameOver, {\n        winner: winner,\n        startAgain: startOver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n        changeSymbol: handleSelctedSquare,\n        board: boardGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Log, {\n      turns: gameTurns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4YVjB5ipglAVFQS/ytJvLs7N5h0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Player","GameBoard","Log","GameOver","WINNING_COMBINATIONS","jsxDEV","_jsxDEV","PLAYER","X","O","initialGameBoard","deriveActivePlayer","gameTurns","currentPlayer","length","player","App","_s","setPlayer","symbolPlayer","setSymbolPlayer","setGameTurns","activePlayer","boardGame","map","el","turn","square","row","col","console","log","winner","combination","firstSquareSymbol","column","secondSquareSymbol","thirdSquareSymbol","hasDraw","handleSelctedSquare","indexRow","indexCol","prevTurns","updatedPrevTurns","startOver","handlePlayerNewName","symbol","newName","prev","_objectSpread","children","id","className","name","isActive","newWinnerName","fileName","_jsxFileName","lineNumber","columnNumber","startAgain","changeSymbol","board","turns","_c","$RefreshReg$"],"sources":["/Users/michal/Downloads/Unknown-2/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Player from \"./components/Player\";\nimport GameBoard from \"./components/GameBoard\";\nimport Log from \"./components/Log\";\nimport GameOver from \"./components/GameOver\";\n\nimport { WINNING_COMBINATIONS } from \"./winning-combination\";\n\nconst PLAYER = { X: \"Player1\", O: \"Plyaer2\" };\n\nconst initialGameBoard = [\n  [null, null, null],\n  [null, null, null],\n  [null, null, null],\n];\n\nfunction deriveActivePlayer(gameTurns) {\n  let currentPlayer = \"X\";\n\n  if (gameTurns.length > 0 && gameTurns[0].player === \"X\") {\n    currentPlayer = \"O\";\n  }\n  return currentPlayer;\n}\n\nfunction App() {\n  const [player, setPlayer] = useState(PLAYER);\n  const [symbolPlayer, setSymbolPlayer] = useState(\"X\");\n  const [gameTurns, setGameTurns] = useState([]);\n\n  const activePlayer = deriveActivePlayer(gameTurns);\n\n  let boardGame = [...initialGameBoard.map((el) => [...el])];\n\n  for (const turn of gameTurns) {\n    const { square, player } = turn;\n    const { row, col } = square;\n    boardGame[row][col] = player;\n  }\n  console.log(boardGame);\n  let winner;\n  for (const combination of WINNING_COMBINATIONS) {\n    const firstSquareSymbol =\n      boardGame[combination[0].row][combination[0].column];\n    const secondSquareSymbol =\n      boardGame[combination[1].row][combination[1].column];\n    const thirdSquareSymbol =\n      boardGame[combination[2].row][combination[2].column];\n\n    if (\n      firstSquareSymbol &&\n      firstSquareSymbol === secondSquareSymbol &&\n      firstSquareSymbol === thirdSquareSymbol\n    ) {\n      winner = player[firstSquareSymbol];\n    }\n  }\n  let hasDraw = gameTurns.length === 9 && !winner;\n\n  function handleSelctedSquare(indexRow, indexCol) {\n    //setSymbolPlayer((symbol) => (symbol === \"X\" ? \"O\" : \"X\"));\n    setGameTurns((prevTurns) => {\n      const currentPlayer = deriveActivePlayer(prevTurns);\n      //if(prevTurns.find(el=> el.square.row==indexRow))\n      const updatedPrevTurns = [\n        { square: { row: indexRow, col: indexCol }, player: currentPlayer },\n        ...prevTurns,\n      ];\n      return updatedPrevTurns;\n    });\n  }\n\n  function startOver() {\n    setGameTurns([]);\n  }\n  function handlePlayerNewName(symbol, newName) {\n    setPlayer((prev) => {\n      return {\n        ...prev,\n        [symbol]: newName,\n      };\n    });\n  }\n  return (\n    <menu>\n      <div id=\"game-container\">\n        <ol id=\"players\" className=\"highlight-player\">\n          <Player\n            name={PLAYER.X}\n            symbol=\"X\"\n            isActive={activePlayer === \"X\"}\n            newWinnerName={handlePlayerNewName}\n          />\n          <Player\n            name={PLAYER.O}\n            symbol=\"O\"\n            isActive={activePlayer === \"O\"}\n            newWinnerName={handlePlayerNewName}\n          />\n        </ol>\n        {(winner || hasDraw) && (\n          <GameOver winner={winner} startAgain={startOver} />\n        )}\n        <GameBoard changeSymbol={handleSelctedSquare} board={boardGame} />\n      </div>\n      <Log turns={gameTurns}></Log>\n    </menu>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}