{"ast":null,"code":"var _jsxFileName = \"/Users/michal/Downloads/Unknown-2/src/components/GameBoard.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameBoard(_ref) {\n  let {\n    changeSymbol,\n    board\n  } = _ref;\n  // const [boardGame, setBoradGame] = useState(initialGameBoard);\n  // function chosePlace(row, el) {\n  //   setBoradGame((oldBoard) => {\n  //     const updatedBoard = [...oldBoard.map((el) => [...el])];\n  //     updatedBoard[row][el] = activeSymbol;\n  //     return updatedBoard;\n  //   });\n\n  //   changeSymbol();\n  // }\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    id: \"game-board\",\n    children: board.map((row, indexrow) => /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: row.map((el, indexEl) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeSymbol(indexrow, indexEl),\n          disabled: el !== null,\n          children: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)\n      }, indexEl, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, indexrow, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","GameBoard","_ref","changeSymbol","board","id","children","map","row","indexrow","el","indexEl","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michal/Downloads/Unknown-2/src/components/GameBoard.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function GameBoard({ changeSymbol, board }) {\n  // const [boardGame, setBoradGame] = useState(initialGameBoard);\n  // function chosePlace(row, el) {\n  //   setBoradGame((oldBoard) => {\n  //     const updatedBoard = [...oldBoard.map((el) => [...el])];\n  //     updatedBoard[row][el] = activeSymbol;\n  //     return updatedBoard;\n  //   });\n\n  //   changeSymbol();\n  // }\n  return (\n    <ol id=\"game-board\">\n      {board.map((row, indexrow) => (\n        <ol key={indexrow}>\n          {row.map((el, indexEl) => (\n            <li key={indexEl}>\n              <button\n                onClick={() => changeSymbol(indexrow, indexEl)}\n                disabled={el !== null}\n              >\n                {el}\n              </button>\n            </li>\n          ))}\n        </ol>\n      ))}\n    </ol>\n  );\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,SAASA,CAAAC,IAAA,EAA0B;EAAA,IAAzB;IAAEC,YAAY;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACvD;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,oBACEF,OAAA;IAAIK,EAAE,EAAC,YAAY;IAAAC,QAAA,EAChBF,KAAK,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACvBT,OAAA;MAAAM,QAAA,EACGE,GAAG,CAACD,GAAG,CAAC,CAACG,EAAE,EAAEC,OAAO,kBACnBX,OAAA;QAAAM,QAAA,eACEN,OAAA;UACEY,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACM,QAAQ,EAAEE,OAAO,CAAE;UAC/CE,QAAQ,EAAEH,EAAE,KAAK,IAAK;UAAAJ,QAAA,EAErBI;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC,GANFN,OAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACL;IAAC,GAVKR,QAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACC,EAAA,GA7BuBjB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}